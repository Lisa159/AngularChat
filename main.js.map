{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/card/card.component.css","webpack:///./src/app/card/card.component.html","webpack:///./src/app/card/card.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login-popup/login-popup.component.css","webpack:///./src/app/login-popup/login-popup.component.html","webpack:///./src/app/login-popup/login-popup.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/auth.guard.service.ts","webpack:///./src/app/services/rdf.service.ts","webpack:///./src/app/services/solid.auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { popupLogin } from 'solid-auth-client/dist-lib/solid-auth-client.bundle.js';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport {LoginPopupComponent} from './login-popup/login-popup.component';\nimport {LoginComponent} from './login/login.component';\nimport { CardComponent } from './card/card.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n// Services\nimport { AuthService } from './services/solid.auth.service';\nimport { AuthGuard } from './services/auth.guard.service';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'login-popup',\n    component: LoginPopupComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'card',\n    component: CardComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LoginPopupComponent,\n    DashboardComponent,\n    CardComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    NgSelectModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule //required for toastr\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".profile-container {\\n  font-family: 'Roboto', sans-serif;\\n}\\n\\n.profile-container h1 {\\n  font-size: 24px;\\n  color: #7C55FB;\\n  font-weight: bold;\\n  line-height: 32px;\\n  letter-spacing: 1.2px;\\n  text-align: center;\\n  margin-top: 82px;\\n  text-transform: uppercase;\\n}\\n\\n.profile-fields-container {\\n  max-width: 740px;\\n  min-height: 500px;\\n  margin: 0 auto;\\n  border: 1px solid #ccc;\\n  box-shadow: #ccc 1px 1px 4px;\\n  position: relative;\\n}\\n\\n.profile-fields-container .profile-image-container {\\n  height: 200px;\\n  width: 100%;\\n  background-size: cover !important;\\n  background: url('/assets/images/Solid_Pattern.png');\\n}\\n\\n.profile-fields-container .profile-image-container img {\\n  height: 128px;\\n  border-radius: 50%;\\n  margin-left: auto;\\n  margin-right:auto;\\n  position: relative;\\n  top:40px;\\n  display: block;\\n}\\n\\n.profile-fields-container i {\\n  font-size: 14px;\\n  color: #89969F;\\n  padding-left: 26px;\\n  padding-right: 10px;\\n  margin-top: 24px;\\n}\\n\\n.profile-fields-container input[type=text].field-text {\\n  height: 12px;\\n  width: 280px;\\n  border: 1px solid #89969F;\\n  border-radius: 4px;\\n  padding: 10px;\\n}\\n\\n.profile-fields-container input[type=text].field-text::-webkit-input-placeholder {\\n  color: rgba(102,102,102,0.2);\\n}\\n\\n.profile-fields-container input[type=text].field-text:-ms-input-placeholder {\\n  color: rgba(102,102,102,0.2);\\n}\\n\\n.profile-fields-container input[type=text].field-text::-ms-input-placeholder {\\n  color: rgba(102,102,102,0.2);\\n}\\n\\n.profile-fields-container input[type=text].field-text::placeholder {\\n  color: rgba(102,102,102,0.2);\\n}\\n\\n.profile-save-button-container {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: auto;\\n  height: 100px;\\n  flex-direction: column;\\n  justify-content: flex-end;\\n}\\n\\n.profile-save-button {\\n  background-color: #7C55FB;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 280px;\\n}\\n\\n.profile-save-button:disabled {\\n  background-color: #F0EEEB;\\n  border-color: #F0EEEB;\\n  cursor: not-allowed;\\n}\\n\\n.topnav {\\n  position:absolute;\\n  top:0;\\n  left:0;\\n  width: 100%;\\n  background-color: #7C4DFF;\\n  height: 50px;\\n  color: #fff;\\n}\\n\\n.topnav .logo {\\n  display: inline-block;\\n  font-family: 'Roboto Slab', serif;\\n  font-size: 24px;\\n  font-weight: bold;\\n  text-transform: uppercase;\\n  line-height: 32px;\\n  padding-right: 80px;\\n  position: relative;\\n  top: -8px;\\n  left: 28px;\\n}\\n\\n.topnav .menu-item {\\n  display: inline-block;\\n  font-size: 10px;\\n  line-height: 13px;\\n  width: 100px;\\n  height: 100%;\\n  text-align: center;\\n}\\n\\n.topnav .menu-item i {\\n  font-size: 24px;\\n  margin-top:8px;\\n  margin-bottom: 2px;\\n}\\n\\n.topnav .profile-menu {\\n  float: right;\\n  display: inline-block;\\n  width: 50px;\\n  height: 50px;\\n  background-color: rgba(0,0,0,0.25);\\n}\\n\\n.topnav .profile-menu img {\\n  display: block;\\n  height: 30px;\\n  width: 30px;\\n  border-radius: 50%;\\n  margin: 0 auto;\\n  margin-top:10px;\\n  cursor: pointer;\\n}\\n\\n.loading-image {\\n  text-align: center;\\n  margin-top: 50px;\\n}\\n\"","module.exports = \"<div class=\\\"profile-container\\\">\\n  <!-- EXAMPLE TOP NAV -->\\n  <div class=\\\"topnav\\\">\\n    <div class=\\\"logo\\\">Solid</div>\\n    <div class=\\\"menu-item\\\">\\n      <div>\\n        <i class=\\\"far fa-compass\\\"></i>\\n      </div>\\n      Menu Item 1\\n    </div>\\n    <div class=\\\"menu-item\\\">\\n      <div>\\n        <i class=\\\"far fa-comment\\\"></i>\\n      </div>\\n      Menu Item 2\\n    </div>\\n    <div class=\\\"menu-item\\\">\\n      <div>\\n        <i class=\\\"fas fa-sliders-h\\\"></i>\\n      </div>\\n      Menu Item 3\\n    </div>\\n\\n    <div class=\\\"profile-menu\\\" (click)=\\\"logout()\\\">\\n      <img [src]=\\\"profileImage\\\" />\\n    </div>\\n  </div>\\n  <h1>Profile</h1>\\n\\n  <!-- LOADING IMAGE -->\\n  <div class=\\\"loading-image\\\" *ngIf=\\\"loadingProfile\\\">\\n    <i class=\\\"fas fa-circle-notch fa-4x fa-spin\\\"></i>\\n  </div>\\n\\n  <!-- MAIN PROFILE -->\\n  <div class=\\\"profile-fields-container\\\" *ngIf=\\\"!loadingProfile\\\">\\n    <div class=\\\"profile-image-container\\\">\\n      <img [src]=\\\"profileImage\\\" />\\n    </div>\\n    <form style=\\\"padding-top: 26px;\\\" #f=\\\"ngForm\\\" (submit)=\\\"onSubmit()\\\">\\n      <div class=\\\"fields pure-g\\\">\\n        <!-- NAME -->\\n        <div class=\\\"pure-u-1-1 pure-u-md-1-2 form-group\\\">\\n          <i class=\\\"fas fa-user\\\"></i> <input type=\\\"text\\\" class=\\\"field-text form-control\\\" name=\\\"fn\\\" placeholder=\\\"NAME\\\" [(ngModel)]=\\\"profile.fn\\\" />\\n        </div>\\n\\n        <!-- PHONE -->\\n        <div class=\\\"pure-u-1-1 pure-u-md-1-2 form-group\\\">\\n          <i class=\\\"fas fa-phone\\\"></i><input type=\\\"text\\\" class=\\\"field-text form-control\\\" name=\\\"phone\\\" placeholder=\\\"PHONE\\\" [(ngModel)]=\\\"profile.phone\\\" />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"fields pure-g\\\">\\n        <!-- ROLE -->\\n        <div class=\\\"pure-u-1-1 pure-u-md-1-2 form-group\\\">\\n          <i class=\\\"fas fa-user-astronaut\\\"></i> <input type=\\\"text\\\" class=\\\"field-text form-control\\\" name=\\\"role\\\" placeholder=\\\"ROLE\\\" [(ngModel)]=\\\"profile.role\\\" />\\n        </div>\\n\\n        <!-- EMAIL -->\\n        <div class=\\\"pure-u-1-1 pure-u-md-1-2 form-group\\\">\\n          <i class=\\\"fas fa-envelope\\\"></i><input type=\\\"text\\\" class=\\\"field-text form-control\\\" name=\\\"email\\\" placeholder=\\\"EMAIL\\\" [(ngModel)]=\\\"profile.email\\\" />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"fields pure-g\\\">\\n        <!-- ORGANIZATION -->\\n        <div class=\\\"pure-u-1-1 pure-u-md-1-2 form-group\\\">\\n          <i class=\\\"fas fa-building\\\"></i> <input type=\\\"text\\\" class=\\\"field-text form-control\\\" name=\\\"company\\\" placeholder=\\\"ORGANIZATION\\\" [(ngModel)]=\\\"profile.company\\\" />\\n        </div>\\n\\n        <!-- ADDRESS -->\\n        <div class=\\\"pure-u-1-1 pure-u-md-1-2 form-group\\\">\\n          <i class=\\\"fas fa-map-marker-alt\\\" style=\\\"width: 12px; margin-left: 2px;\\\"></i><input type=\\\"text\\\" class=\\\"field-text form-control\\\" name=\\\"address\\\" placeholder=\\\"ADDRESS\\\" [(ngModel)]=\\\"profile.address.street\\\" />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"profile-save-button-container\\\">\\n        <button type=\\\"submit\\\" class=\\\"wide-button profile-save-button\\\" [disabled]=\\\"!cardForm || cardForm.pristine\\\">Save</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { SolidProfile } from '../models/solid-profile.model';\nimport { RdfService } from '../services/rdf.service';\nimport { AuthService } from '../services/solid.auth.service';\n\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n})\nexport class CardComponent implements OnInit  {\n\n  profile: SolidProfile;\n  profileImage: string;\n  loadingProfile: Boolean;\n\n  @ViewChild('f') cardForm: NgForm;\n\n  constructor(private rdf: RdfService,\n    private route: ActivatedRoute, private auth: AuthService) {}\n\n  ngOnInit() {\n    this.loadingProfile = true;\n    this.loadProfile();\n\n    // Clear cached profile data\n    // TODO: Remove this code and find a better way to get the old data\n    localStorage.removeItem('oldProfileData');\n  }\n\n  // Loads the profile from the rdf service and handles the response\n  async loadProfile() {\n    try {\n      this.loadingProfile = true;\n      const profile = await this.rdf.getProfile();\n      if (profile) {\n        this.profile = profile;\n        this.auth.saveOldUserData(profile);\n      }\n\n      this.loadingProfile = false;\n      this.setupProfileData();\n    } catch (error) {\n      console.log(`Error: ${error}`);\n    }\n\n  }\n\n  // Submits the form, and saves the profile data using the auth/rdf service\n  async onSubmit () {\n    if (!this.cardForm.invalid) {\n      try {\n        await this.rdf.updateProfile(this.cardForm);\n        localStorage.setItem('oldProfileData', JSON.stringify(this.profile));\n      } catch (err) {\n        console.log(`Error: ${err}`);\n      }\n    }\n  }\n\n  // Format data coming back from server. Intended purpose is to replace profile image with default if it's missing\n  // and potentially format the address if we need to reformat it for this UI\n  private setupProfileData() {\n    if (this.profile) {\n      this.profileImage = this.profile.image ? this.profile.image : '/assets/images/profile.png';\n    } else {\n      this.profileImage = '/assets/images/profile.png';\n    }\n  }\n\n  // Example of logout functionality. Normally wouldn't be triggered by clicking the profile picture.\n  logout() {\n    this.auth.solidSignOut();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard\\\">\\n  <p>Your webId is {{ session.webId }}</p>\\n  <ul>\\n    <li><a [routerLink]=\\\"['/card']\\\">Profile</a></li>\\n    <li><a (click)=\\\"onSignOut()\\\">Signout</a></li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n// import { currentSession } from 'solid-auth-client';\n\n// Services\nimport { AuthService } from '../services/solid.auth.service';\n\nclass Session {\n  constructor() {}\n\n  webId: string;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  session: Session = new Session();\n\n  constructor(private auth: AuthService, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    console.log('hello');\n    this.loadSession();\n  }\n\n  loadSession = async () => {\n    // this.session = await currentSession();\n  }\n\n  onSignOut = () => {\n    this.auth.solidSignOut();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div id=\\\"app-container\\\">Loading...</div>\\n\\n\\n\"","import { Component, OnInit, ElementRef } from '@angular/core';\ndeclare let popup: any;\n\n@Component({\n  selector: 'app-login-popup',\n  templateUrl: './login-popup.component.html',\n  styleUrls: ['./login-popup.component.css']\n})\nexport class LoginPopupComponent implements OnInit {\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.runScript();\n  }\n\n  runScript () {\n    const s = document.createElement('script');\n    s.type = 'text/javascript';\n    s.src = '/assets/js/libs/popup.js';\n    this.elementRef.nativeElement.appendChild(s);\n    // s.onload = () => this.triggerDuo();\n  }\n\n}\n","module.exports = \"\\n.login-page {\\n  text-align: center;\\n  font-family: 'Roboto', sans-serif;\\n  color: #666;\\n}\\n\\n.login-page h1 {\\n  font-size: 38px;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  line-height: 50px;\\n  letter-spacing: 1.9px;\\n  padding-top: 12px;\\n  margin-top: 0px;\\n}\\n\\n.login-page h2 {\\n  color: #666;\\n\\n  font-size: 16px;\\n  font-weight: 500;\\n  letter-spacing: 1px;\\n  line-height: 21px;\\n  margin-top: 48px;\\n}\\n\\n.login-page .small-link {\\n  font-size: 12px;\\n  color: #666;\\n  letter-spacing: 0.75px;\\n  line-height: 16px;\\n}\\n\\n.login-page .registration-link {\\n  margin-top: 38px;\\n}\\n\\n.login-page .registration-link p {\\n  font-size: 16px;\\n  color: #666;\\n  letter-spacing: 1px;\\n}\\n\\n.login-page .item-divider {\\n  box-sizing:border-box;\\n  height: 1px;\\n  width: 354px;\\n  border-bottom: 1px solid #E0E0E0;\\n  position: absolute;\\n  bottom:-8px; left:-9px;\\n}\\n\"","module.exports = \"<div class=\\\"login-page\\\">\\n\\n  <!-- APP LOGO -->\\n  <div style=\\\"margin-top:60px;\\\">\\n    <i class=\\\"fas fa-user-circle\\\" style=\\\"font-size: 64px;\\\"></i>\\n  </div>\\n\\n  <!-- APP NAME -->\\n  <h1>\\n    Profile Demo App\\n  </h1>\\n\\n  <!-- LOGIN TITLE -->\\n  <h2>\\n    Login with Solid Identity\\n  </h2>\\n\\n  <!-- PROVIDER SELECTION -->\\n  <div style=\\\"margin-top: 10px;\\\">\\n    <ng-select class=\\\"login-select\\\"\\n               bindLabel=\\\"name\\\"\\n               bindValue=\\\"loginUrl\\\"\\n               placeholder=\\\"Select ID Provider\\\"\\n               dropdownPosition=\\\"bottom\\\"\\n               [items]=\\\"identityProviders\\\"\\n               [(ngModel)]=\\\"selectedProviderUrl\\\"\\n               style=\\\"width: 360px; height: 48px; margin-left: auto; margin-right: auto;\\\">\\n\\n      <!-- DROPDOWN TEMPLATE -->\\n      <ng-template ng-option-tmp let-item=\\\"item\\\">\\n        <div style=\\\"height:40px; padding-top:10px; position: relative;\\\">\\n          <img [src]=\\\"item.image\\\" style=\\\"float: left; height: 32px; width: 32px; margin-top:-5px;\\\" />\\n          <span style=\\\"float: left; margin-left: 10px;\\\">{{ item.name }}</span>\\n          <div style=\\\"clear: both;\\\"></div>\\n          <div class=\\\"item-divider\\\"></div>\\n        </div>\\n      </ng-template>\\n\\n    </ng-select>\\n    <input type=\\\"text\\\"\\n           class=\\\"wide-text\\\"\\n           *ngIf=\\\"selectedProviderUrl===null\\\"\\n           placeholder=\\\"Enter WebID\\\"\\n           style=\\\"margin-top:10px; padding: 12px 10px; width: 340px; height: 16px; display: block; margin-left: auto; margin-right: auto;\\\"\\n           [(ngModel)]=\\\"customProviderUrl\\\" />\\n    <button class=\\\"wide-button\\\" (click)=\\\"onLogin()\\\" *ngIf=\\\"selectedProviderUrl !== undefined || customProviderUrl !== undefined\\\" [disabled]=\\\"selectedProviderUrl===null && !customProviderUrl\\\" style=\\\"margin-top:10px;\\\">Go</button>\\n  </div>\\n\\n  <!-- REGISTRATION -->\\n  <div class=\\\"registration-link\\\">\\n    <p style=\\\"margin: 12px;\\\">Don't have a Solid Identity?</p>\\n    <button class=\\\"wide-button\\\" (click)=\\\"goToRegistration()\\\">Register</button>\\n  </div>\\n\\n  <!-- HELP -->\\n  <div style=\\\"margin-top: 48px;\\\">\\n    <a href=\\\"https://solid.mit.edu\\\" target=\\\"_blank\\\" class=\\\"small-link\\\">\\n      <i class=\\\"fas fa-info-circle\\\"></i> What is a Solid Identity?\\n    </a>\\n  </div>\\n\\n</div>\\n  \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n// Auth Service\nimport { AuthService } from '../services/solid.auth.service';\nimport { SolidProvider } from '../models/solid-provider.model';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  /**\n   * A list of Solid Identity Providers\n   * @type {SolidProvider[]}\n   */\n  identityProviders: SolidProvider[];\n  selectedProviderUrl: string;\n  customProviderUrl: string;\n\n  ngOnInit() {\n    // If we're authenticated, go to profile\n    if (localStorage.getItem('solid-auth-client')) {\n      this.router.navigateByUrl('/card');\n    }\n\n    this.identityProviders = this.auth.getIdentityProviders();\n  }\n\n  /*\n  *  Alternate login-popup function for Solid. See service for more details.\n  */\n  onLoginPopup = async () => {\n    this.auth.solidLoginPopup();\n  }\n\n  onLogin = async () => {\n    const idp: string = this.selectedProviderUrl ? this.selectedProviderUrl : this.customProviderUrl;\n\n    if (idp) {\n      try {\n        this.auth.solidLogin(idp);\n      } catch (err) {\n        console.log('An error has occurred logging in: ' + err);\n      }\n    }\n  }\n\n  goToRegistration() {\n    this.router.navigateByUrl('/register');\n  }\n}\n","module.exports = \".registration {\\n  text-align: center;\\n  font-family: 'Roboto', sans-serif;\\n}\\n\\n.registration .header-bar {\\n  margin: 0px;\\n  height: 44px;\\n  width: calc(100% + 16px);\\n  background-color: #3D6DEB;\\n  color: #fff;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.registration .header-bar p {\\n  text-align: center;\\n  font-family: 'Roboto', sans-serif;\\n  font-weight: bold;\\n  font-size: 14px;\\n  letter-spacing: 1px;\\n  line-height: 15px;\\n}\\n\\n.registration .header-text {\\n  margin-top:92px;\\n  width: 360px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  font-size: 14px;\\n  color: #666;\\n}\\n\\n.registration .header-text a {\\n  color: #666;\\n  font-size: 12px;\\n}\\n\\n.registration .provider-card-container {\\n  margin-top: 28px;\\n}\\n\\n.registration .provider-card {\\n  height: 140px;\\n  width: 320px;\\n  border: 1px solid #DAE0E6;\\n  border-radius: 2px;\\n  background-color: #fff;\\n  margin: 10px;\\n  display: inline-block;\\n  box-shadow: #DAE0E6 1px 1px 6px;\\n}\\n\\n.registration .provider-card .provider-logo {\\n  height: 44px;\\n  width: 44px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 16px;\\n}\\n\\n.registration .provider-card h2 {\\n  color: #656E75;\\n  font-size: 18px;\\n  margin-top: -2px;\\n  letter-spacing: 0.9px;\\n  line-height: 24px;\\n}\\n\\n.registration .provider-card p {\\n  color: #656E75;\\n  font-size: 12px;\\n  line-height: 16px;\\n}\\n\"","module.exports = \"<div class=\\\"registration\\\">\\n  <!-- Header Bar -->\\n  <div class=\\\"header-bar\\\">\\n    <p>Select Solid Identity Provider</p>\\n  </div>\\n\\n  <!-- Header Text -->\\n  <div class=\\\"header-text\\\">\\n    <p>\\n      With a Solid Identity your personal data is stored securely in a POD. You control who has access to it.\\n    </p>\\n    <a href=\\\"https://solid.mit.edu\\\" target=\\\"_blank\\\">\\n      Learn more about Solid IDs and PODs\\n    </a>\\n  </div>\\n\\n  <!-- Provider cards -->\\n  <div class=\\\"provider-card-container\\\">\\n    <div class=\\\"provider-card\\\" *ngFor=\\\"let provider of availableProviders\\\">\\n      <img [src]=\\\"provider.image\\\" class=\\\"provider-logo\\\">\\n      <h2>{{ provider.name }}</h2>\\n      <p>{{ provider.desc }}</p>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/solid.auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  availableProviders: any[];\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    this.availableProviders = this.auth.getIdentityProviders();\n    this.availableProviders = this.availableProviders.filter(idp => idp.providerLoginUrl !== null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\n\nimport { AuthService } from './solid.auth.service';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    const isLoggedIn = localStorage.getItem('solid-auth-client') ? true : false;\n\n    if (!isLoggedIn) {\n      this.router.navigateByUrl('/login');\n    }\n\n    return isLoggedIn; /* this.auth.session.pipe(\n      take(1),\n      map(session => !!session),\n      tap(loggedIn => {\n        if (!loggedIn) {\n          return this.router.navigate(['/']);\n        }\n      })\n    );*/\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SolidSession } from '../models/solid-session.model';\ndeclare let solid: any;\ndeclare let $rdf: any;\n//import * as $rdf from 'rdflib'\n\n// TODO: Remove any UI interaction from this service\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\nconst VCARD = $rdf.Namespace('http://www.w3.org/2006/vcard/ns#');\nconst FOAF = $rdf.Namespace('http://xmlns.com/foaf/0.1/');\n\n/**\n * A service layer for RDF data manipulation using rdflib.js\n * @see https://solid.inrupt.com/docs/manipulating-ld-with-rdflib\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class RdfService {\n\n  session: SolidSession;\n  store = $rdf.graph();\n\n  /**\n   * A helper object that connects to the web, loads data, and saves it back. More powerful than using a simple\n   * store object.\n   * When you have a fetcher, then you also can ask the query engine to go fetch new linked data automatically\n   * as your query makes its way across the web.\n   * @see http://linkeddata.github.io/rdflib.js/doc/Fetcher.html\n   */\n  fetcher = $rdf.Fetcher;\n\n  /**\n   * The UpdateManager allows you to send small changes to the server to “patch” the data as your user changes data in\n   * real time. It also allows you to subscribe to changes other people make to the same file, keeping track of\n   * upstream and downstream changes, and signaling any conflict between them.\n   * @see http://linkeddata.github.io/rdflib.js/doc/UpdateManager.html\n   */\n  updateManager = $rdf.UpdateManager;\n\n  constructor (private toastr: ToastrService) {\n    const fetcherOptions = {};\n    this.fetcher = new $rdf.Fetcher(this.store, fetcherOptions);\n    this.updateManager = new $rdf.UpdateManager(this.store);\n    this.getSession();\n  }\n\n  /**\n   * Fetches the session from Solid, and store results in localStorage\n   */\n  getSession = async() => {\n    this.session = await solid.auth.currentSession(localStorage);\n  }\n\n  /**\n   * Gets a node that matches the specified pattern using the VCARD onthology\n   *\n   * any() can take a subject and a predicate to find Any one person identified by the webId\n   * that matches against the node/predicated\n   *\n   * @param {string} node VCARD predicate to apply to the $rdf.any()\n   * @param {string?} webId The webId URL (e.g. https://yourpod.solid.community/profile/card#me)\n   * @return {string} The value of the fetched node or an emtpty string\n   * @see https://github.com/solid/solid-tutorial-rdflib.js\n   */\n  getValueFromVcard = (node: string, webId?: string): string | any => {\n    return this.getValueFromNamespace(node, VCARD, webId);\n  };\n\n  /**\n   * Gets a node that matches the specified pattern using the FOAF onthology\n   * @param {string} node FOAF predicate to apply to the $rdf.any()\n   * @param {string?} webId The webId URL (e.g. https://yourpod.solid.community/profile/card#me)\n   * @return {string} The value of the fetched node or an emtpty string\n   */\n  getValueFromFoaf = (node: string, webId?: string) => {\n    return this.getValueFromNamespace(node, FOAF, webId);\n  };\n \n  transformDataForm = (form: NgForm, me: any, doc: any) => {\n    const insertions = [];\n    const deletions = [];\n    const fields = Object.keys(form.value);\n    const oldProfileData = JSON.parse(localStorage.getItem('oldProfileData')) || {};\n\n    // We need to split out into three code paths here:\n    // 1. There is an old value and a new value. This is the update path\n    // 2. There is no old value and a new value. This is the insert path\n    // 3. There is an old value and no new value. Ths is the delete path\n    // These are separate codepaths because the system needs to know what to do in each case\n    fields.map(field => {\n\n      let predicate = VCARD(this.getFieldName(field));\n      let subject = this.getUriForField(field, me);\n      let why = doc;\n\n      let fieldValue = this.getFieldValue(form, field);\n      let oldFieldValue = this.getOldFieldValue(field, oldProfileData);\n\n      // if there's no existing home phone number or email address, we need to add one, then add the link for hasTelephone or hasEmail\n      if(!oldFieldValue && fieldValue && (field === 'phone' || field==='email')) {\n        this.addNewLinkedField(field, insertions, predicate, fieldValue, why, me);\n      } else {\n\n        //Add a value to be updated\n        if (oldProfileData[field] && form.value[field] && !form.controls[field].pristine) {\n          deletions.push($rdf.st(subject, predicate, oldFieldValue, why));\n          insertions.push($rdf.st(subject, predicate, fieldValue, why));\n        }\n\n        //Add a value to be deleted\n        else if (oldProfileData[field] && !form.value[field] && !form.controls[field].pristine) {\n          deletions.push($rdf.st(subject, predicate, oldFieldValue, why));\n        }\n\n        //Add a value to be inserted\n        else if (!oldProfileData[field] && form.value[field] && !form.controls[field].pristine) {\n          insertions.push($rdf.st(subject, predicate, fieldValue, why));\n        }\n      }\n    });\n\n    return {\n      insertions: insertions,\n      deletions: deletions\n    };\n  };\n\n  private addNewLinkedField(field, insertions, predicate, fieldValue, why, me: any) {\n    //Generate a new ID. This id can be anything but needs to be unique.\n    let newId = field + ':' + Date.now();\n\n    //Get a new subject, using the new ID\n    let newSubject = $rdf.sym(this.session.webId.split('#')[0] + '#' + newId);\n\n    //Set new predicate, based on email or phone fields\n    let newPredicate = field === 'phone' ? $rdf.sym(VCARD('hasTelephone')) : $rdf.sym(VCARD('hasEmail'));\n\n    //Add new phone or email to the pod\n    insertions.push($rdf.st(newSubject, predicate, fieldValue, why));\n\n    //Set the type (defaults to Home/Personal for now) and insert it into the pod as well\n    //Todo: Make this dynamic\n    let type = field === 'phone' ? $rdf.literal('Home') : $rdf.literal('Personal');\n    insertions.push($rdf.st(newSubject, VCARD('type'), type, why));\n\n    //Add a link in #me to the email/phone number (by id)\n    insertions.push($rdf.st(me, newPredicate, newSubject, why));\n  }\n\n  private getUriForField(field, me): string {\n    let uriString: string;\n    let uri: any;\n\n    switch(field) {\n      case 'phone':\n        uriString = this.getValueFromVcard('hasTelephone');\n        if(uriString) {\n          uri = $rdf.sym(uriString);\n        }\n        break;\n      case 'email':\n        uriString = this.getValueFromVcard('hasEmail');\n        if(uriString) {\n          uri = $rdf.sym(uriString);\n        }\n        break;\n      default:\n        uri = me;\n        break;\n    }\n\n    return uri;\n  }\n\n  /**\n   * Extracts the value of a field of a NgForm and converts it to a $rdf.NamedNode\n   * @param {NgForm} form\n   * @param {string} field The name of the field that is going to be extracted from the form\n   * @return {RdfNamedNode}\n   */\n  private getFieldValue(form: NgForm, field: string): any {\n    let fieldValue: any;\n\n    if(!form.value[field]) {\n      return;\n    }\n\n    switch(field) {\n      case 'phone':\n        fieldValue = $rdf.sym('tel:+'+form.value[field]);\n        break;\n      case 'email':\n        fieldValue = $rdf.sym('mailto:'+form.value[field]);\n        break;\n      default:\n        fieldValue = form.value[field];\n        break;\n    }\n\n    return fieldValue;\n  }\n\n  private getOldFieldValue(field, oldProfile): any {\n    let oldValue: any;\n\n    if(!oldProfile || !oldProfile[field]) {\n      return;\n    }\n\n    switch(field) {\n      case 'phone':\n        oldValue = $rdf.sym('tel:+'+oldProfile[field]);\n        break;\n      case 'email':\n        oldValue = $rdf.sym('mailto:'+oldProfile[field]);\n        break;\n      default:\n        oldValue = oldProfile[field];\n        break;\n    }\n\n    return oldValue;\n  }\n\n  private getFieldName(field): string {\n    switch (field) {\n      case 'company':\n        return 'organization-name';\n      case 'phone':\n      case 'email':\n        return 'value';\n      default:\n        return field;\n    }\n  }\n\n  updateProfile = async (form: NgForm) => {\n    const me = $rdf.sym(this.session.webId);\n    const doc = $rdf.NamedNode.fromValue(this.session.webId.split('#')[0]);\n    const data = this.transformDataForm(form, me, doc);\n\n    //Update existing values\n    if(data.insertions.length > 0 || data.deletions.length > 0) {\n      this.updateManager.update(data.deletions, data.insertions, (response, success, message) => {\n        if(success) {\n          this.toastr.success('Your Solid profile has been successfully updated', 'Success!');\n          form.form.markAsPristine();\n          form.form.markAsTouched();\n        } else {\n          this.toastr.error('Message: '+ message, 'An error has occurred');\n        }\n      });\n    }\n  };\n\n  getAddress = () => {\n    const linkedUri = this.getValueFromVcard('hasAddress');\n\n    if (linkedUri) {\n      return {\n        locality: this.getValueFromVcard('locality', linkedUri),\n        country_name: this.getValueFromVcard('country-name', linkedUri),\n        region: this.getValueFromVcard('region', linkedUri),\n        street: this.getValueFromVcard('street-address', linkedUri),\n      };\n    }\n\n    return {};\n  };\n\n  //Function to get email. This returns only the first email, which is temporary\n  getEmail = () => {\n    const linkedUri = this.getValueFromVcard('hasEmail');\n\n    if (linkedUri) {\n      return this.getValueFromVcard('value', linkedUri).split('mailto:')[1];\n    }\n\n    return '';\n  }\n\n  //Function to get phone number. This returns only the first phone number, which is temporary. It also ignores the type.\n  getPhone = () => {\n    const linkedUri = this.getValueFromVcard('hasTelephone');\n\n    if(linkedUri) {\n      return this.getValueFromVcard('value', linkedUri).split('tel:+')[1];\n    }\n  };\n\n  getProfile = async () => {\n\n    if (!this.session) {\n      await this.getSession();\n    }\n\n    try {\n      await this.fetcher.load(this.session.webId);\n\n      return {\n        fn : this.getValueFromVcard('fn'),\n        company : this.getValueFromVcard('organization-name'),\n        phone: this.getPhone(),\n        role: this.getValueFromVcard('role'),\n        image: this.getValueFromVcard('hasPhoto'),\n        address: this.getAddress(),\n        email: this.getEmail(),\n      };\n    } catch (error) {\n      console.log(`Error fetching data: ${error}`);\n    }\n  };\n\n  /**\n   * Gets any resource that matches the node, using the provided Namespace\n   * @param {string} node The name of the predicate to be applied using the provided Namespace \n   * @param {$rdf.namespace} namespace The RDF Namespace\n   * @param {string?} webId The webId URL (e.g. https://yourpod.solid.community/profile/card#me) \n   */\n  private getValueFromNamespace(node: string, namespace: any, webId?: string): string | any {\n    const store = this.store.any($rdf.sym(webId || this.session.webId), namespace(node));\n    if (store) {\n      return store.value;\n    }\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, from } from 'rxjs';\nimport { RdfService } from './rdf.service';\nimport { SolidProvider } from '../models/solid-provider.model';\ndeclare let solid: any;\n\ninterface SolidSession {\n  accessToken: string;\n  clientId: string;\n  idToken: string;\n  sessionKey: string;\n  webId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  session: Observable<SolidSession>;\n  fechInit = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/sparql-update',\n    },\n    body: '',\n  };\n\n  constructor(private router: Router, private rdf: RdfService) {\n    this.isSessionActive();\n  }\n\n  /*\n   * This will check if current session is active to avoid security problems\n  */\n  isSessionActive = async () => {\n    this.session = from(solid.auth.currentSession());\n  }\n\n  /**\n   * Alternative login-popup function. This will open a popup that will allow you to choose an identity provider\n   * without leaving the current page\n   * This is recommended if you don't want to leave the current workflow.\n   */\n  solidLoginPopup = async () => {\n    try {\n      await solid.auth.popupLogin({ popupUri: './login-popup'});\n      // Check if session is valid to avoid redirect issues\n      await this.isSessionActive();\n\n      // popupLogin success redirect to profile\n      this.router.navigate(['/card']);\n    } catch (error) {\n      console.log(`Error: ${error}`);\n    }\n  }\n\n  /*\n  * Signs out of Solid in this app, by calling the logout function and clearing the localStorage token\n  */\n  solidSignOut = async () => {\n    try {\n      await solid.auth.logout();\n      // Remove localStorage\n      localStorage.removeItem('solid-auth-client');\n      // Redirect to login page\n      this.router.navigate(['/']);\n    } catch (error) {\n      console.log(`Error: ${error}`);\n    }\n  }\n\n  saveOldUserData = (profile: any) => {\n    if (!localStorage.getItem('oldProfileData')) {\n      localStorage.setItem('oldProfileData', JSON.stringify(profile));\n    }\n  }\n\n  getOldUserData = () => {\n    return JSON.parse(localStorage.getItem('oldProfileData'));\n  }\n\n  /*\n  *  Make a call to the solid auth endpoint. It requires an identity provider url, which here is coming from the dropdown, which\n  *  is populated by the getIdentityProviders() function call. It currently requires a callback url and a storage option or else\n  *  the call will fail.\n  */\n  solidLogin = async (idp: string) => {\n    await solid.auth.login(idp, {\n      callbackUri: `${window.location.href}card`,\n      storage: localStorage,\n    });\n  }\n\n  /**\n   * Function to get providers. This is to mimic the future provider registry\n   *\n   * @return {SolidProvider[]} A list of SolidProviders\n   */\n  getIdentityProviders(): SolidProvider[] {\n    const inruptProvider: SolidProvider = {\n      name: 'Inrupt',\n      image: '/assets/images/Inrupt.png',\n      loginUrl: 'https://inrupt.net/auth',\n      desc: 'Inrupt Inc. provider'\n    };\n    const solidCommunityProvider: SolidProvider = {\n      name: 'Solid Community',\n      image: '/assets/images/Solid.png',\n      loginUrl: 'https://solid.community',\n      desc: 'A provider maintained by the Solid Community'\n    };\n    const otherProvider: SolidProvider = {\n      name: 'Other (Enter WebID)',\n      image: '/assets/images/Generic.png',\n      loginUrl: null,\n      desc: 'Generic provider'\n    };\n\n    return [\n      inruptProvider,\n      solidCommunityProvider,\n      otherProvider\n    ];\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}